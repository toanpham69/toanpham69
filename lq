local gg = gg
get_value = {}
float = 16
int = 4
double = 64
arch = gg.getTargetInfo()

if arch.x64 then
    flag_type = 32
else
    flag_type = 4
end

function gg.getLibs()
    local info = gg.getTargetInfo()
function toHex(val)
    if info.x64==false then val=val&0xffffffff end
    return string.format('%X', val)
end
    local allLibRange = gg.getRangesList('libil2cpp.so')
    if #allLibRange==0 then allLibRange = gg.getRangesList('libUE4.so') end
    if #allLibRange==0 then allLibRange = gg.getRangesList('split_config.armeabi_v7a.apk') end
    if #allLibRange==0 then allLibRange = gg.getRangesList('split_config.arm64_v8a.apk') end
    if #allLibRange==0 then print('[=====[Lỗi]=====] \n    Không Có Lib\n') return end
    local libs = {}
    for i, v in ipairs(allLibRange) do
        local is_exist = false
        local shortName = string.gsub(v.internalName, '.+/', '')
        shortName = string.gsub(shortName, ':.*', '')
        for a, b in ipairs(libs) do
            if b.shortName==shortName then b['end']=v['end'] b.size=b['end']-b.start break end
        end
        if is_exist==false and v.type:sub(3,3)=='x' and gg.getValues({{address=v.start, flags=4}})[1].value==0x464C457F then
            libs[#libs+1]=v libs[#libs].shortName=shortName
        end
    end
  if (libs[1].size/(1024*1024))<1 then size=(libs[1].size/1024)..' KB'
        else size=(libs[1].size/(1024*1024))..' MB' end
  local libs = {
  internalName = libs[1].internalName,
  name = libs[1].name,
  shortName = libs[1].shortName,
  size = size,
  state = libs[1].state,
  type = libs[1].type,
  start = toHex(libs[1].start),
  ['end'] = toHex(libs[1]['end']),
}
    return libs
end
Lib = gg.getLibs()
libstar = '0x'..Lib.start
lib = '0x'..Lib.start
libend='0x'..Lib['end']

function gg.checkResults(Error)
if gg.getResultsCount() == 0 then 
gg.alert(Error) 
os.exit() 
return end
end

local function fastest()
    return gg.getRangesList("global-metadata.dat")
end


local function faster()
    local metadata = {}
    local allRanges = gg.getRangesList()
    local stringOffset = {} 
    local strStart = {}
    
    for i, v in ipairs(allRanges) do
        stringOffset[i] = {address=v.start+0x18, flags=gg.TYPE_DWORD}
    end
    stringOffset = gg.getValues(stringOffset)
    
    for i, v in ipairs(allRanges) do
        strStart[i] = {address=v.start+stringOffset[i].value, flags=gg.TYPE_DWORD}
    end
    strStart = gg.getValues(strStart)
    
    for i, v in ipairs(strStart) do
        if v.value==0x6F63736D then return {allRanges[i]} end
    end
    return {}
end

local function fast()
    local searchMemoryRange = {
        gg.REGION_C_ALLOC,
        gg.REGION_ANONYMOUS,
        gg.REGION_OTHER,
        gg.REGION_C_HEAP,
    } 
        
    gg.clearResults()
    for i, v in ipairs(searchMemoryRange) do
        gg.setRanges(v)
        gg.searchNumber("h 00 67 65 74 5F 66 69 65 6C 64 4F 66 56 69 65 77 00", gg.TYPE_BYTE, false, gg.SIGH_EQUAL, 0, -1, 1)
        local res = gg.getResults(gg.getResultsCount())
        gg.clearResults()
        if #res>0 then
            for ii, vv in ipairs(gg.getRangesList()) do
                if res[1].address < vv["end"] and res[1].address > vv["start"] then
                    return {vv}
                end
            end
        end
    end
    return {}
end

local function get_metadata()
    local findingMethods = {
        [1] = fastest, 
        [2] = faster, 
        [3] = fast, 
    }
    metadata = {}
    
    for i=1, 3 do
        metadata = findingMethods[i]()
        if #metadata>0 then return metadata end
    end
    return {}
end
get_metadata()
meta_start = metadata[1].start
meta_end = metadata[1]['end']

BytesOf = function (text,strict)
    local bytes = {}
    for i = 1, #text do
      bytes[#bytes +1 ] =  string.byte(text, i)
    end
    local byteString = table.concat(bytes, ";")
    local byteSize = #text
    local result = ((not strict) and byteString .. "::" .. byteSize) or ((strict) and '0;'..byteString .. ";0::" .. byteSize + 2)
    return tostring(result)
   end

function timclass(ClassName)
    local offset
    local pointerType
    if arch.x64 then
        offset = 16
        pointerType = gg.TYPE_QWORD
    else
        offset = 8
        pointerType = gg.TYPE_DWORD
    end
    gg.clearResults()
    gg.setRanges(-1)
    gg.searchNumber(BytesOf(ClassName,true), 1, false, 536870912, meta_start, meta_end,1)
    gg.checkResults('Lỗi Class')
    local result = gg.getResults(1, 1)
    gg.clearResults()
    gg.setRanges(4)
    gg.searchNumber(result[1].address, pointerType)
    if gg.getResultsCount() == 0 then gg.setRanges(-2080896) gg.searchNumber(result[1].address, pointerType) end 
    if gg.getResultsCount() == 0 then gg.setRanges(32) gg.searchNumber(result[1].address, pointerType) end
    gg.checkResults('Lỗi Class')
    local results = gg.getResults(gg.getResultsCount())
    for i, v in pairs(results) do
        results[i].address = results[i].address - offset
    end
    gg.clearResults()
    gg.setRanges(32)
    gg.loadResults(results)
    gg.searchPointer(0)
    gg.checkResults('Lỗi Class')
    gg.getResults(gg.getResultsCount())
    end

gg.searchClass = function(Name,ClassName)
timclass(ClassName)
gg.getResultsHook(Name) 
gg.clearResults()
end

gg.editFields = function(Name,Offset,Value,Flags)
gg.loadResultsHook(Name) 
local results = gg.getResults(gg.getResultsCount())
    for i, v in pairs(results) do
        results[i].address = results[i].address + Offset
    end
    gg.clearResults()
    gg.loadResults(results)
gg.getResultsHook(Name..'class') 
gg.editOffset(Value,Flags,0)
gg.clearResults()
end

gg.revertFields = function(Name)
gg.revertResultsHook(Name..'class') 
end



function gg.editOffset(s,t,o)
gg.getResults(gg.getResultsCount())
         local results = gg.getResults(gg.getResultsCount())     
         local a = {}
    for i, p in ipairs(results) do
      a[i] = {address = results[i].address + o, 
      flags = t,
      value = s,
      freeze = true
}
    end  
    gg.addListItems(a)
    gg.loadResults(a)
end 

function gg.checkAddress(Address, ggtype) 
  v = {}
	res = gg.getValues({{address = Address, flags = ggtype}})
	if type(res) ~= "string" then
		if ggtype == gg.TYPE_BYTE then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFF}
		elseif ggtype == gg.TYPE_WORD then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFF}
		elseif ggtype == gg.TYPE_DWORD then
	    v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFFFFFF}
		elseif ggtype == gg.TYPE_QWORD then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFFFFFFFFFFFFFF}
		elseif ggtype == gg.TYPE_XOR then
		v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value & 0xFFFFFFFF}
		else
		 v[1] = {address = res[1].address, flags = res[1].flags, value = res[1].value}
		end
		return v
	else
		return false
	end
end

function gg.getTextToDword(text)
local text = text
local junk = {[1]=''}
local stln = #text
if stln%2 ~= 0 then stln = stln+1 end
for i = 1,stln/2 do  local  v1 = (string.byte(text,i%stln*2-1)) 
local v2 = (string.byte(text,i%stln*2))  if v2 == nil then v2 = 0 end    
local   v3 = 65536*v2+v1  if #text > 2 then table.insert(junk,1,junk[1]..''..v3)                
elseif #text <= 2 then table.insert(junk,1,v3) end end
ord = '' if order == true and stln > 2 then  ord = ('::'..repeats(tostring(junk[1]:sub(2)),';') * 4 + 1)  end   
if #text > 2 then return junk[1]:sub(2)..ord else return junk[1]..ord end end 
  

function gg.loadAddress(Name) 
v = {}
Name = gg.getTextToDword(Name)
loadValue = {} gg.sleep(50)
Value = get_value[Name]
loadValue[#loadValue + 1] = Value
v = Value
return loadValue 
end

function gg.getAddress(Name,ar,flag) 
Name = gg.getTextToDword(Name)
getAddress = {} 
get_value[Name] = gg.checkAddress(ar,flag)
local Value = get_value[Name]
getAddress[#getAddress + 1] = Value
return getAddress  
end

function gg.revertAddress(Name) 
v = {}
Name = gg.getTextToDword(Name)
v = get_value[Name]
v[1] = {address=(v[1].address), flags=v[1].flags, value = v[1].value, freeze = true}
gg.addListItems(v) gg.clearList() 
return v 
end

function gg.getResultsHook(Name) 
Name = gg.getTextToDword(Name)
local getResultsHook = {}
get_value[Name] = gg.getResults(gg.getResultsCount())
local ResultsHook = get_value[Name]
v = get_value[Name]
getResultsHook[#getResultsHook + 1] = ResultsHook
return getResultsHook
end

function gg.loadResultsHook(Name) 
Name = gg.getTextToDword(Name)
local loadResultsHook = {}
gg.loadResults(get_value[Name]) 
loadResultsHook[#loadResultsHook + 1] = get_value[Name]
v = get_value[Name]
return loadResultsHook
end

function gg.revertResultsHook(Name) 
v = {}
Name = gg.getTextToDword(Name)
v = get_value[Name]
local a = {}
for i, p in ipairs(v) do
      a[i] = {address = v[i].address, 
      flags = v[i].flags,
      value = v[i].value,
      freeze = true
}
    end  
    gg.addListItems(a)
    gg.clearList()
return v 
end

function gg.clearFull() 
gg.getResults(gg.getResultsCount())
gg.clearResults()
gg.getListItems()
gg.clearList()
end  


--=====START HOOK=====

-- start call methods
gg.getCallMethods = function(Name,Update,Methods)
gg.clearResults()
gg.setRanges(4)
gg.searchNumber(lib + Update,flag_type) 
if gg.getResultsCount() == 0 then gg.setRanges(-2080896) gg.searchNumber(lib + Update,flag_type) end 
if gg.getResultsCount() == 0 then gg.setRanges(32) gg.searchNumber(lib + Update,flag_type) end
gg.checkResults('Lỗi Hook Call Methods')
gg.getResultsHook(Name)
gg.clearResults()
get_value[Name..'Methods'] = lib + Methods
end

gg.startCallMethods = function(Name)
gg.loadResultsHook(Name)
Value = get_value[Name..'Methods']
gg.editOffset(Value,flag_type,0)
gg.clearResults()
gg.clearList()
end

gg.revertCallMethods = function(Name)
gg.revertResultsHook(Name)
end
--end call methods

function isProcess64Bit()
	local regions = gg.getRangesList()
	local lastAddress = regions[#regions]["end"]
	return (lastAddress >> 32) ~= 0
end
local ISA = isProcess64Bit()
function ISAOffsets()
	if (ISA == false) then -- 32 bit
	
--======start hook field======
--fields32
function gg.getHookFields(Name,Offset)
gg.setVisible(false) gg.clearResults()
gg.setRanges(4)
gg.searchNumber(lib + Offset,flag_type) 
if gg.getResultsCount() == 0 then gg.setRanges(-2080896) gg.searchNumber(lib + Offset,flag_type) end 
if gg.getResultsCount() == 0 then gg.setRanges(32) gg.searchNumber(lib + Offset,flag_type) end
gg.checkResults('Lỗi Hook Fields')
gg.getResultsHook(Name..'Update')
gg.clearResults()

gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value
voidfixupdate = v[1].address
gg.getAddress('t',lib + (Offset + 0x4),4)
fixupdate2 = v[1].value
voidfixupdate2 = v[1].address
gg.getAddress('t',lib + (Offset + 0x8),4)
fixupdate3 = v[1].value
voidfixupdate3 = v[1].address
newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name, newLocation, 4)
local m = {}
m[1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[2] = {address = newLocation + 0x8, flags = 4, value = "~A CMP	 R0, #0", freeze = true}
m[3] = {address = newLocation + 0x95C, flags = 4, value = "~A LDR	 PC, [PC,#-4]", freeze = true}
m[4] = {address = newLocation + 0x960, flags = 4, value = voidfixupdate3, freeze = true}
gg.addListItems(m)
gg.loadResultsHook(Name..'Update')
gg.editOffset(newLocation,4,0)
gg.clearFull() 
return m
end

gg.editHookFields = function(Name,Offset,Value,Flags)
gg.setVisible(false) gg.clearFull() 
--float
if (tonumber(Flags) == 16) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=16 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Fields')
lozzz = gg.getResults(1)
update = lozzz[1].address
local m = {}
m[1] = {address = update, flags = 4, value = "~A MOVT	 R1, #"..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A STR	 R1, [R0,#"..Offset.."]", freeze = true}
gg.addListItems(m) gg.clearFull() 
return end

--int
if (tonumber(Flags) == 4) then
Int ='~A MOVW	 R1, #'
gg.setVisible(false) gg.clearFull() 
if (tonumber(Value) > 2147418112) then gg.alert("Lỗi, edit int max ~= 2147418112 ") os.exit()   end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Int ='~A MOVT	 R1, #'
end
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Fields')
lozzz = gg.getResults(1)
update = lozzz[1].address
local m = {}
m[1] = {address = update, flags = 4, value = Int..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A STR	 R1, [R0,#"..Offset.."]", freeze = true}
gg.addListItems(m) gg.clearFull() 
return end

-- double
if (tonumber(Flags) == 64) then
Int ='~A MOVW	 R1, #'
gg.setVisible(false) gg.clearFull() 
if (tonumber(Value) > 2147418112) then gg.alert("Lỗi, edit int max ~= 2147418112 ") os.exit()   end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Int ='~A MOVT	 R1, #'
end
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Fields')
lozzz = gg.getResults(1)
update = lozzz[1].address
local m = {}
m[1] = {address = update, flags = 4, value = Int..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A STR	 R1, [R0,#"..Offset.."]", freeze = true}
gg.addListItems(m) gg.clearFull() 
return end
end



function gg.revertHookFields(Name,Offset)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("~A STR	 R1, [R0,#"..Offset.."]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Revert Hook Fields')
local t = gg.getResults(1)
local update = t[1].address
local m = {}
m[1] = {address = update - 0x4, flags = 32, value = "0", freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
--======end hook field======
	
--======start hook void======
--void32
function gg.getHookMethods(Name,Offset)
gg.setVisible(false) gg.clearFull()
gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value
voidfixupdate = v[1].address
gg.getAddress('t',lib + (Offset + 0x4),4)
fixupdate2 = v[1].value
voidfixupdate2 = v[1].address
gg.getAddress('t',lib + (Offset + 0x8),4)
fixupdate3 = v[1].value
voidfixupdate3 = v[1].address
newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name,newLocation,4)
local m = {}
m[1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[2] = {address = newLocation + 0x8, flags = 4, value = "~A CMP	 R0, #0", freeze = true}
m[3] = {address = newLocation + 0x95C, flags = 4, value = "~A LDR	 PC, [PC,#-4]", freeze = true}
m[4] = {address = newLocation + 0x960, flags = 4, value = voidfixupdate3, freeze = true}
m[5] = {address = lib + Offset, flags = 4, value = "~A ldr pc, [pc,#-4]", freeze = true}
m[6] = {address = lib + (Offset + 0x4), flags = 4, value = newLocation, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end


gg.editHookMethods = function(Name,r,Value,Flags)
gg.setVisible(false) gg.clearFull() 

-- float
if (tonumber(Flags) == 16) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=16 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Tham Số Methods')
lozzz = gg.getResults(1)
update = lozzz[1].address
gg.getAddress(Name..r,update,4)
local m = {}
m[1] = {address = update, flags = 4, value = "~A MOVT	 R"..r..", #"..Value, freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end

-- int
if (tonumber(Flags) == 4) then
Int ='~A MOVW	 R'..r..', #'
gg.setVisible(false) gg.clearFull() 
if (tonumber(Value) > 2147418112) then gg.alert("Lỗi, edit int max ~= 2147418112 ") os.exit()   end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Int ='~A MOVT	 R'..r..', #'
end
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Tham Số Methods')
lozzz = gg.getResults(1)
update = lozzz[1].address
gg.getAddress(Name..r,update,4)
local m = {}
m[1] = {address = update, flags = 4, value = Int..Value, freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end

if (tonumber(Flags) == 64) then
Int ='~A MOVW	 R'..r..', #'
gg.setVisible(false) gg.clearFull() 
if (tonumber(Value) > 2147418112) then gg.alert("Lỗi, edit int max ~= 2147418112 ") os.exit()   end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Int ='~A MOVT	 R'..r..', #'
end
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Tham Số Methods')
lozzz = gg.getResults(1)
update = lozzz[1].address
gg.getAddress(Name..r,update,4)
local m = {}
m[1] = {address = update, flags = 4, value = Int..Value, freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end
end

function gg.revertHookMethods(Name,r)
gg.setVisible(false) gg.clearFull()
Print = {}
gg.revertAddress(Name..r) 
Print[1] = {Value = v[1].value, Address = v[1].address}
   return Print
end

--=====end hook void=====

--=====start hook hexpath=====

function gg.getHookPatchMemory(Name,Offset)
gg.setVisible(false) gg.clearFull()

gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value
voidfixupdate = v[1].address

gg.getAddress('t',lib + (Offset + 0x4),4)
fixupdate2 = v[1].value
voidfixupdate2 = v[1].address

gg.getAddress('t',lib + (Offset + 0x8),4)
fixupdate3 = v[1].value
voidfixupdate3 = v[1].address

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name,newLocation,4)


local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 4, value = "~A LDR	 PC, [PC,#-4]", freeze = true}
m[#m+1] = {address = newLocation + 0xC, flags = 4, value = voidfixupdate3, freeze = true}
m[#m+1] = {address = newLocation + 0x28, flags = 32, value = fixupdate, freeze = true}
m[#m+1] = {address = newLocation + 0x30, flags = 4, value = '~A LDR	 PC, [PC,#-4]', freeze = true}
m[#m+1] = {address = newLocation + 0x34, flags = 4, value = voidfixupdate3, freeze = true}
m[#m+1] = {address = lib + Offset, flags = 4, value = "~A ldr pc, [pc,#-4]", freeze = true}
m[#m+1] = {address = lib + (Offset + 0x4), flags = 4, value = newLocation, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

function gg.editHookPatchMemory(Name,Value,Flags)
gg.setVisible(false) gg.clearFull()

--float
if (tonumber(Flags) == 16) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=16 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[1] = {address = update, flags = 4, value = "~A MOVT	 R0, #"..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = '~A BX	 LR', freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end 

--int
if (tonumber(Flags) == 4) then
Int ='~A MOVW	 R0, #'
gg.setVisible(false) gg.clearFull() 
if (tonumber(Value) > 2147418112) then gg.alert("Lỗi, edit int max ~= 2147418112 ") os.exit()   end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Int ='~A MOVT	 R0, #'
end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[1] = {address = update, flags = 4, value = Int..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = '~A BX	 LR', freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end 

-- double 
if (tonumber(Flags) == 64) then
if (tonumber(Value) < 65535) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A MOVW R0, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A VMOV S0, R0', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A VCVT.F64.U32 D0, S0', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A VMOV R0, R1, D0', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '1EFF2FE1r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 131070) then
Value = Value - 65535
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A MOVW R0, #65535', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A MOVW R1,  #'..Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A ADD R0, R0, R1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A VMOV S0, R0', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '~A VCVT.F64.U32 D0, S0', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '~A VMOV R0, R1, D0', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = '1EFF2FE1r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) > 131070) then
Value1 = Value/65535 
if (tonumber(Value) > 429503283) then
Value1 = 429503283/65535 end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A MOVW R0, #'..Value1, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A MOVW R1,  #65535', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A MUL R0, R0, R1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A MOVW R1,  #1', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '~A ADD R1, R0, R1', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '~A VMOV S0, R0', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = '~A VCVT.F64.U32 D0, S0', freeze = true}
m[#m+1] = {address = update + 0x1C, flags = 4, value = '~A VMOV R0, R1, D0', freeze = true}
m[#m+1] = {address = update + 0x20, flags = 4, value = '1EFF2FE1r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
end
end

function gg.revertHookPatchMemory(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
update = v[1].address

gg.getAddress('t',update + 0x28, 32)
local Value = v[1].value
gg.getAddress('t',update + 0x30, 32)
local Value2 = v[1].value

local m = {}
m[1] = {address = update, flags = 32, value = Value, freeze = true}
m[2] = {address = update + 0x8, flags = 32, value = Value2, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

--=====end hook hexpath=====

--=====start Liên Kết Methods=====

function gg.getLinkMethods(Name,Offset,Offset2)
gg.setVisible(false) gg.clearFull()

gg.getAddress('t',lib + Offset2,4)
editupdate = v[1].address

gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value
voidfixupdate = v[1].address

gg.getAddress('t',lib + (Offset + 0x4),4)
fixupdate2 = v[1].value
voidfixupdate2 = v[1].address

gg.getAddress('t',lib + (Offset + 0x8),4)
fixupdate3 = v[1].value
voidfixupdate3 = v[1].address

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name,newLocation,4)


local m = {}
m[1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[2] = {address = newLocation + 0x10, flags = 32, value = fixupdate, freeze = true}
m[3] = {address = newLocation + 0x18, flags = 4, value = "~A ldr pc, [pc,#-4]", freeze = true}
m[4] = {address = newLocation + 0x1C, flags = 4, value = editupdate, freeze = true}
m[5] = {address = newLocation + 0x8, flags = 4, value = "~A LDR	 PC, [PC,#-4]", freeze = true}
m[6] = {address = newLocation + 0xC, flags = 4, value = voidfixupdate3, freeze = true}
m[7] = {address = lib + Offset, flags = 4, value = "~A ldr pc, [pc,#-4]", freeze = true}
m[8] = {address = lib + (Offset + 0x4), flags = 4, value = newLocation, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

function gg.startLinkMethods(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
update = v[1].address

gg.getAddress('t',update + 0x18, 32)
Value = v[1].value
local m = {}
m[1] = {address = update, flags = 32, value = Value, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

function gg.revertLinkMethods(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
update = v[1].address

gg.getAddress('t',update + 0x10, 32)
Value = v[1].value

local m = {}
m[1] = {address = update, flags = 32, value = Value, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

--=====end Liên Kết Methods=====

--=====start hexpath=====
function gg.memoryPatch(Name,Offset,Value,Flags) 
gg.setVisible(false) gg.clearFull()
gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value
gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value
gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value
gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value
gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value
newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name..'loz',newLocation,32)
local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = VL1, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = VL2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = VL3, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = VL4, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = VL5, freeze = true}
gg.addListItems(m)  gg.clearFull()

-- double
if (tonumber(Flags) == 64) then
if (tonumber(Value) < 65535) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A MOVW R0, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A VMOV S0, R0', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A VCVT.F64.U32 D0, S0', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A VMOV R0, R1, D0', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '1EFF2FE1r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 131070) then
Value = Value - 65535
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A MOVW R0, #65535', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A MOVW R1,  #'..Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A ADD R0, R0, R1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A VMOV S0, R0', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '~A VCVT.F64.U32 D0, S0', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '~A VMOV R0, R1, D0', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = '1EFF2FE1r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) > 131070) then
Value1 = Value/65535 
if (tonumber(Value) > 429503283) then
Value1 = 429503283/65535 end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A MOVW R0, #'..Value1, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A MOVW R1,  #65535', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A MUL R0, R0, R1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A MOVW R1,  #1', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '~A ADD R1, R0, R1', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '~A VMOV S0, R0', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = '~A VCVT.F64.U32 D0, S0', freeze = true}
m[#m+1] = {address = update + 0x1C, flags = 4, value = '~A VMOV R0, R1, D0', freeze = true}
m[#m+1] = {address = update + 0x20, flags = 4, value = '1EFF2FE1r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
end


if (tonumber(Flags) == 16) then  -- float
local Location = gg.allocatePage(gg.PROT_READ | gg.PROT_WRITE | gg.PROT_EXEC)
    local ds = {}
	ds[1] = {address=(Location),flags=Flags ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Arm = "~A MOVT	 R0, #"
Hexpath = {}
Hexpath[1] = {address = lib + Offset, flags = 4, value = Arm..Value, freeze = true}
Hexpath[2] = {address = lib + (Offset + 0x4), flags = 4, value = '~A BX	 LR', freeze = true}
gg.addListItems(Hexpath) gg.clearFull() 
end

if (tonumber(Flags) == 4) then  -- int
Arm ='~A MOVW	 R0, #' -- int
if (tonumber(Value) > 2147418112) then gg.alert("Lỗi, edit int max ~= 2147418112 ") os.exit() gg.clearFull() end
if (tonumber(Value) == 0) then
Arm ='~A MOV	 R0, #' end
if (tonumber(Value) == 1) then
Arm ='~A MOV	 R0, #' end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(gg.PROT_READ | gg.PROT_WRITE | gg.PROT_EXEC)
    local ds = {}
	ds[1] = {address=(Location),flags=Flags ,value = Value , freeze = true}
	ds[2] = {address=(Location + 0x2),flags=2}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
Value = values[2].value
Arm ='~A MOVT	 R0, #'
end
Hexpath = {}
Hexpath[1] = {address = lib + Offset, flags = 4, value = Arm..Value, freeze = true}
Hexpath[2] = {address = lib + (Offset + 0x4), flags = 4, value = '~A BX	 LR', freeze = true}
gg.addListItems(Hexpath) gg.clearFull() 
end
end

function gg.revertMemoryPatch(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name..'loz')
update = v[1].address

gg.getAddress('t',update,32)
local Value = v[1].value
gg.getAddress('t',update + 0x8, 32)
local Value1 = v[1].value
gg.getAddress('t',update + 0x10, 32)
local Value2 = v[1].value
gg.getAddress('t',update + 0x18, 32)
local Value3 = v[1].value
gg.getAddress('t',update + 0x20, 32)
local Value4 = v[1].value

gg.loadAddress(Name)
newLocation = v[1].address
local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = Value, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = Value1, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = Value2, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = Value3, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = Value4, freeze = true}
gg.addListItems(m)  gg.clearFull()
return m
end    

gg.editParameter = function(Name, Offset, Value)
gg.setVisible(false) gg.clearFull()
gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value

gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value

gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name..'loz',newLocation,32)

local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = VL1, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = VL2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = VL3, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = VL4, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = VL5, freeze = true}
gg.addListItems(m)  gg.clearFull()

			Hexpath = {}
			Hexpath[1] = {address=(lib + Offset),flags=4,value=(Value),freeze=true};
			gg.addListItems(Hexpath);
			gg.clearFull();
			return Hexpath;
		end
  
	elseif (ISA == true) then -- 64 bit
	
	
--=====start hook field======
--fields64
function gg.getHookFields(Name,Offset)
gg.setVisible(false) gg.clearResults()
gg.setRanges(4)
gg.searchNumber(lib + Offset,flag_type) 
if gg.getResultsCount() == 0 then gg.setRanges(-2080896) gg.searchNumber(lib + Offset,flag_type) end 
if gg.getResultsCount() == 0 then gg.setRanges(32) gg.searchNumber(lib + Offset,flag_type) end
gg.checkResults('Lỗi Hook Fields')
gg.getResultsHook(Name..'pdate')
gg.clearResults()

gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value
gg.getAddress('t',lib + (Offset + 0x8),4)
fixupdate2 = v[1].value
gg.getAddress('t',lib + (Offset + 0x10),32)
voidfixupdate3 = v[1].address
newLocation = gg.allocatePage(2|1|4)

gg.clearResults()
gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,newLocation, -1, 1)
gg.checkResults('Lỗi Hook Fields')
gg.editOffset("~A8 CBZ	 X0, [PC,#0x0]",4,0)
gg.clearResults() gg.clearFull()
gg.getAddress(Name,newLocation,32)
local m = {}
m[1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[2] = {address = newLocation + 0x8, flags = 4, value = fixupdate2, freeze = true}
m[3] = {address = newLocation + 0xC, flags = 4, value = "~A8 CBZ	 X0, [PC,#0x0]", freeze = true}
m[4] = {address = newLocation + 0x950, flags = 32, value = "-3017690887376338863", freeze = true}
m[5] = {address = newLocation + 0x958, flags = 32, value = voidfixupdate3, freeze = true}
gg.addListItems(m)
gg.loadResultsHook(Name..'pdate')
gg.editOffset(newLocation,32,0)
gg.clearFull()
return m
end


gg.editHookFields = function(Name,Offset,Value,Flags)
gg.setVisible(false) gg.clearFull() 
--float
if (tonumber(Flags) == 16) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=16 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
 end
Value = ach
gg.loadAddress(Name)
local update = v[1].address
gg.clearResults()
gg.setRanges(-1)
gg.searchNumber("~A8 CBZ	 X0, [PC,#0x0]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Fields')
local lozzz = gg.getResults(2)
gg.clearResults()
update = lozzz[2].address
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 W8, #0x"..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A8 STR	 W8, [X0,#"..Offset.."]", freeze = true}
gg.addListItems(m) gg.clearFull()
return
end

--int
if (tonumber(Flags) == 4) then
if (tonumber(Value) == 0) then Value = "~A8 MOV	 W8, XZR" end
if (tonumber(Value) > 1) then
if (tonumber(Value) > 2147418112) then
gg.alert("Lỗi, edit int max ~= 2147418112 ") gg.clearFull() os.exit()  end
if (tonumber(Value) < 65535) then
ach=string.format("%X",tonumber(Value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
    end 
end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
   local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
          end
     end
  Value = ach
end
gg.loadAddress(Name)
local update = v[1].address
gg.clearResults()
gg.setRanges(-1)
gg.searchNumber("~A8 CBZ	 X0, [PC,#0x0]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Fields')
local lozzz = gg.getResults(2)
gg.clearResults()
update = lozzz[2].address
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 W8, #0x"..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A8 STR	 W8, [X0,#"..Offset.."]", freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end

--double
if (tonumber(Flags) == 64) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=16 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
 end
Value = ach
gg.loadAddress(Name)
local update = v[1].address
gg.clearResults()
gg.setRanges(-1)
gg.searchNumber("~A8 CBZ	 X0, [PC,#0x0]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Fields')
local lozzz = gg.getResults(2)
gg.clearResults()
update = lozzz[2].address
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 W8, #0x"..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A8 STR	 W8, [X0,#"..Offset.."]", freeze = true}
gg.addListItems(m) gg.clearFull()
return
end
end


function gg.revertHookFields(Name,Offset)
gg.setVisible(false) gg.clearFull()

gg.loadAddress(Name)
local update = v[1].address

gg.setRanges(-1)
gg.searchNumber("~A8 STR	 W8, [X0,#"..Offset.."]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Revert Hook Fields')
local t = gg.getResults(1)
local update = t[1].address
local m = {}
m[1] = {address = update - 0x4, flags = 32, value = "-5476377143862624256", freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
	
--=====end hook field======

--=====start hook void======

--void64
function gg.getHookMethods(Name,Offset)
gg.setVisible(false) gg.clearFull()

gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
fixupdate2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
voidfixupdate3 = v[1].address

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name,newLocation,32)


gg.setRanges(-1)
gg.searchNumber("0", 4, false, gg.SIGN_EQUAL,newLocation, -1, 1)
gg.checkResults('Lỗi Hook Tham Số Methods')
gg.editOffset("~A8 CBZ	 X0, [PC,#0x0]",4,0)

local m = {}
m[1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[2] = {address = newLocation + 0x8, flags = 32, value = fixupdate2, freeze = true}
m[3] = {address = newLocation + 0x10, flags = 4, value = "~A8 CBZ	 X0, [PC,#0x0]", freeze = true}
m[4] = {address = newLocation + 0x950, flags = 32, value = "-3017690887376338863", freeze = true}
m[5] = {address = newLocation + 0x958, flags = 32, value = voidfixupdate3, freeze = true}
m[6] = {address = lib + Offset, flags = 32, value = "-3017690887376338863", freeze = true}
m[7] = {address = lib + (Offset + 0x8), flags = 32, value = newLocation, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end



gg.editHookMethods = function(Name,r,Value,Flags)
gg.setVisible(false) gg.clearFull() 

-- float
if (tonumber(Flags) == 16) then
local Location = gg.allocatePage(2|1|4)
    local ds = {}
	ds[1] = {address=(Location),flags=16 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
 end
Value_float = ach
gg.loadAddress(Name)
local update = v[1].address
gg.clearResults()
gg.setRanges(-1)
gg.searchNumber("~A8 CBZ	 X0, [PC,#0x0]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Tham Số Methods')
local lozzz = gg.getResults(2)
gg.clearResults()
update = lozzz[2].address
gg.getAddress(Name..r,update,4)
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 X"..r..", #0x"..Value_float, freeze = true}
gg.addListItems(m) 
gg.clearFull()
return 
end

-- int
if (tonumber(Flags) == 4) then
if (tonumber(Value) == 0) then Value = "~A8 MOV	 W8, XZR" end
if (tonumber(Value) > 0) then
if (tonumber(Value) > 2147418112) then
gg.alert("Lỗi, edit int max ~= 2147418112 ") gg.clearFull() os.exit()  end
if (tonumber(Value) < 65535) then
ach=string.format("%X",tonumber(Value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
    end 
end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
   local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
          end
     end
  Value_int = ach
end
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("~A8 CBZ	 X0, [PC,#0x0]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Tham Số Methods')
local lozzz = gg.getResults(2)
gg.clearResults()
update = lozzz[2].address
gg.getAddress(Name..r,update,4)
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 X"..r..", #0x"..Value_int, freeze = true}
gg.addListItems(m)  gg.clearFull()
return 
end

if (tonumber(Flags) == 64) then
if (tonumber(Value) == 0) then Value = "~A8 MOV	 W8, XZR" end
if (tonumber(Value) > 1) then
if (tonumber(Value) > 2147418112) then
gg.alert("Lỗi, edit int max ~= 2147418112 ") gg.clearFull() os.exit()  end
if (tonumber(Value) < 65535) then
ach=string.format("%X",tonumber(Value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
    end 
end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
   local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
          end
     end
  Value_int = ach
end
gg.loadAddress(Name)
local update = v[1].address
gg.setRanges(-1)
gg.searchNumber("~A8 CBZ	 X0, [PC,#0x0]", 4, false, gg.SIGN_EQUAL,update, -1, 1)
gg.checkResults('Lỗi Edit Hook Tham Số Methods')
local lozzz = gg.getResults(2)
gg.clearResults()
update = lozzz[2].address
gg.getAddress(Name..r,update,4)
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 X"..r..", #0x"..Value_int, freeze = true}
gg.addListItems(m)  gg.clearFull()
return 
end
end


function gg.revertHookMethods(Name,r)
gg.setVisible(false) gg.clearFull()
Print = {}
gg.revertAddress(Name..r) 
Print[1] = {Value = v[1].value, Address = v[1].address}
   return Print
end

	
--=====end hook void =====
--=====start hook hexpath =====

function gg.getHookPatchMemory(Name,Offset)
gg.setVisible(false) gg.clearFull()

gg.getAddress(Name..'t',lib + Offset,32)
fixupdate = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
fixupdate2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
voidfixupdate3 = v[1].address

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name,newLocation,32)

local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = fixupdate2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = "-3017690887376338863", freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = voidfixupdate3, freeze = true}
m[#m+1] = {address = newLocation + 0x28, flags = 32, value = fixupdate, freeze = true}
m[#m+1] = {address = newLocation + 0x28 + 0x8, flags = 32, value = fixupdate2, freeze = true}
m[#m+1] = {address = newLocation + 0x28 + 0x10, flags = 32, value = "-3017690887376338863", freeze = true}
m[#m+1] = {address = newLocation + 0x28 + 0x18, flags = 32, value = voidfixupdate3, freeze = true}
m[#m+1] = {address = lib + Offset, flags = 32, value = "-3017690887376338863", freeze = true}
m[#m+1] = {address = lib + (Offset + 0x8), flags = 32, value = newLocation, freeze = true}
gg.addListItems(m)  gg.clearFull()
return m
end

function gg.editHookPatchMemory(Name,Value,Flags)
gg.setVisible(false) gg.clearFull()

--float
if (tonumber(Flags) == 16) then
if (tonumber(Value) == 0) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = 'E0031F2Ar', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 65535) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 131070) then
Value = Value - 65535
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV	 W0, #0xFFFF', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV	 W1, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '0000010Br', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) > 131070) then
Value1 = Value/65535 
if (tonumber(Value) > 429503283) then
Value1 = 429503283/65535 end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value1, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV W1, #65535', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '007C011Br', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A8 MOV W1, #0x1', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '0000010Br', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0x1C, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x20, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end
end

--int
if (tonumber(Flags) == 4) then
if (tonumber(Value) == 0) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[1] = {address = update, flags = 4, value = "E0031F2Ar", freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A8 RET", freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
if (tonumber(Value) > 1) then
if (tonumber(Value) > 2147418112) then
gg.alert("Lỗi, edit int max ~= 2147418112 ") gg.clearFull() os.exit()  end
if (tonumber(Value) < 65535) then
ach=string.format("%X",tonumber(Value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
    end 
end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(2|1|4)
   local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(50)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
          end
     end
  Value = ach
end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[1] = {address = update, flags = 4, value = "~A8 MOV	 W0, #0x"..Value, freeze = true}
m[2] = {address = update + 0x4, flags = 4, value = "~A8 RET", freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end

-- double 
if (tonumber(Flags) == 64) then
if (tonumber(Value) == 0) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = 'E0031F2Ar', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 65535) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 131070) then
Value = Value - 65535
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV W1,  #'..Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A8 ADD W0, W0, W1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) > 131070) then
Value1 = Value/65535 
if (tonumber(Value) > 429503283) then
Value1 = 429503283/65535 end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value1, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV W1,  #65535', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A8 MUL W0, W0, W1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A8 MOV W1,  #0x1', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '~A8 ADD W0, W0, W1', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return 
end
end
end


function gg.revertHookPatchMemory(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
update = v[1].address

gg.getAddress('t',update + 0x28, 32)
local Value = v[1].value
gg.getAddress('t',update + 0x30, 32)
local Value1 = v[1].value
gg.getAddress('t',update + 0x38, 32)
local Value2 = v[1].value
gg.getAddress('t',update + 0x40, 32)
local Value3 = v[1].value

local m = {}
m[#m+1] = {address = update, flags = 32, value = Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 32, value = Value1, freeze = true}
m[#m+1] = {address = update + 0x10, flags = 32, value = Value2, freeze = true}
m[#m+1] = {address = update + 0x18, flags = 32, value = Value3, freeze = true}
gg.addListItems(m)  gg.clearFull()
return m
end
	
--=====end hook hexpath =====
--=====start Liên Kết Methods =====

function gg.getLinkMethods(Name,Offset,Offset1)
gg.setVisible(false) gg.clearFull()

gg.getAddress('t',lib + (Offset1),32)
editupdate = v[1].address

gg.getAddress('t',lib + Offset,32)
fixupdate = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
fixupdate2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
voidfixupdate3 = v[1].address

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name,newLocation,32)

local m = {}
m[1] = {address = newLocation, flags = 32, value = fixupdate, freeze = true}
m[2] = {address = newLocation + 0x8, flags = 32, value = fixupdate2, freeze = true}
m[3] = {address = newLocation + 0x10, flags = 32, value = "-3017690887376338863", freeze = true}
m[4] = {address = newLocation + 0x18, flags = 32, value = voidfixupdate3, freeze = true}
m[5] = {address = newLocation + 0x20, flags = 32, value = fixupdate, freeze = true}
m[6] = {address = newLocation + 0x28, flags = 32, value = fixupdate2, freeze = true}
m[7] = {address = newLocation + 0x30, flags = 32, value = editupdate, freeze = true}
m[8] = {address = lib + Offset, flags = 32, value = "-3017690887376338863", freeze = true}
m[9] = {address = lib + (Offset + 0x8), flags = 32, value = newLocation, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

function gg.startLinkMethods(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
update = v[1].address
gg.getAddress('t',update + 0x30,32)
Value = v[1].value
local m = {}
m[1] = {address = update, flags = 32, value = "-3017690887376338863", freeze = true}
m[2] = {address = update + 0x8, flags = 32, value = Value, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

function gg.revertLinkMethods(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name)
update = v[1].address
gg.getAddress('t',update + 0x20,32)
Value = v[1].value
gg.getAddress('t',update + 0x28,32)
Valuee = v[1].value

local m = {}
m[1] = {address = update, flags = 32, value = Value, freeze = true}
m[2] = {address = update + 0x8, flags = 32, value = Valuee, freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
--=====end Liên Kết Methods=====
-- start hexpath
function gg.memoryPatch(Name,Offset,Value,Flags) 
gg.setVisible(false) gg.clearFull()

gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value

gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value

gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name..'loz',newLocation,32)

local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = VL1, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = VL2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = VL3, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = VL4, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = VL5, freeze = true}
gg.addListItems(m)  gg.clearFull()

-- float
if (tonumber(Flags) == 16) then
if (tonumber(Value) == 0) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = 'E0031F2Ar', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 65535) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 131070) then
Value = Value - 65535
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV	 W0, #0xFFFF', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV	 W1, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '0000010Br', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) > 131070) then
Value1 = Value/65535 
if (tonumber(Value) > 429503283) then
Value1 = 429503283/65535 end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value1, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV W1, #65535', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '007C011Br', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A8 MOV W1, #0x1', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '0000010Br', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '0000271Er', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = '00D8215Er', freeze = true}
m[#m+1] = {address = update + 0x1C, flags = 4, value = '0000261Er', freeze = true}
m[#m+1] = {address = update + 0x20, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
end

-- double
if (tonumber(Flags) == 64) then
if (tonumber(Value) == 0) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = 'E0031F2Ar', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 65535) then
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) < 131070) then
Value = Value - 65535
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #', freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV W1,  #'..Value, freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A8 ADD W0, W0, W1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end

if (tonumber(Value) > 131070) then
Value1 = Value/65535 
if (tonumber(Value) > 429503283) then
Value1 = 429503283/65535 end
gg.loadAddress(Name)
local update = v[1].address
local m = {}
m[#m+1] = {address = update , flags = 4, value = '~A8 MOV W0, #'..Value1, freeze = true}
m[#m+1] = {address = update + 0x4, flags = 4, value = '~A8 MOV W1,  #65535', freeze = true}
m[#m+1] = {address = update + 0x8, flags = 4, value = '~A8 MUL W0, W0, W1', freeze = true}
m[#m+1] = {address = update + 0xC, flags = 4, value = '~A8 MOV W1,  #0x1', freeze = true}
m[#m+1] = {address = update + 0x10, flags = 4, value = '~A8 ADD W0, W0, W1', freeze = true}
m[#m+1] = {address = update + 0x14, flags = 4, value = '~A8 SCVTF D0, W0', freeze = true}
m[#m+1] = {address = update + 0x18, flags = 4, value = 'C0035FD6r', freeze = true}
gg.addListItems(m) gg.clearFull()
return m
end
end

-- int
if (tonumber(Flags) == 4) then
if (tonumber(Value) == 0) then
MemoryPatch = {}
MemoryPatch[1] = {address = lib + Offset, flags = 32, value = "-2999674702930181152", freeze = true, name = 'memoryPatch : '..Name}
gg.addListItems(MemoryPatch) gg.clearFull() return MemoryPatch end
if (tonumber(Value) == 1) then
MemoryPatch = {}
MemoryPatch[1] = {address = lib + Offset, flags = 32, value = "-2999674702252736480", freeze = true, name = 'memoryPatch : '..Name}
gg.addListItems(MemoryPatch) gg.clearFull() return MemoryPatch end
if (tonumber(Value) > 2147418112) then
gg.alert("Lỗi, edit int max ~= 2147418112 ") gg.clearFull() os.exit()  end
if (tonumber(Value) < 65535) then
ach=string.format("%X",tonumber(Value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
    end end
if (tonumber(Value) > 65535) then
local Location = gg.allocatePage(gg.PROT_READ | gg.PROT_WRITE | gg.PROT_EXEC)
   local ds = {}
	ds[1] = {address=(Location),flags=4 ,value = Value , freeze = true}
	ds[2] = {address=(Location),flags=2, value = '0', freeze = true}
	ds[3] = {address=(Location),flags=4}
	gg.addListItems(ds) gg.sleep(100)
local  values = gg.getListItems() gg.clearList()
ach=string.format("%X",tonumber(values[1].value)) 
    if #(ach)>8 then
    act=(#(ach)-8)+1
    ach=string.sub(ach,act) 
      end
   end
Hexpath = {}
Hexpath[1] = {address = lib + Offset , flags = 4, value = "~A8 MOV	 W0, #0x"..ach, freeze = true}
Hexpath[2] = {address = lib + (Offset + 0x4), flags = 4, value = "~A8 RET", freeze = true}
gg.addListItems(Hexpath) gg.clearFull()
 end
end

function gg.revertMemoryPatch(Name)
gg.setVisible(false) gg.clearFull()
gg.loadAddress(Name..'loz')
update = v[1].address

gg.getAddress('t',update,32)
local Value = v[1].value
gg.getAddress('t',update + 0x8, 32)
local Value1 = v[1].value
gg.getAddress('t',update + 0x10, 32)
local Value2 = v[1].value
gg.getAddress('t',update + 0x18, 32)
local Value3 = v[1].value
gg.getAddress('t',update + 0x20, 32)
local Value4 = v[1].value

gg.loadAddress(Name)
newLocation = v[1].address
local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = Value, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = Value1, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = Value2, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = Value3, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = Value4, freeze = true}
gg.addListItems(m)  gg.clearFull()
return m
      end   
gg.editParameter = function(Name, Offset, Value)
gg.setVisible(false) gg.clearFull()
gg.getAddress(Name,lib + Offset,32)
VL1 = v[1].value

gg.getAddress('t',lib + (Offset + 0x8),32)
VL2 = v[1].value

gg.getAddress('t',lib + (Offset + 0x10),32)
VL3 = v[1].value

gg.getAddress('t',lib + (Offset + 0x18),32)
VL4 = v[1].value

gg.getAddress('t',lib + (Offset + 0x20),32)
VL5 = v[1].value

newLocation = gg.allocatePage(2|1|4)
gg.getAddress(Name..'loz',newLocation,32)

local m = {}
m[#m+1] = {address = newLocation, flags = 32, value = VL1, freeze = true}
m[#m+1] = {address = newLocation + 0x8, flags = 32, value = VL2, freeze = true}
m[#m+1] = {address = newLocation + 0x10, flags = 32, value = VL3, freeze = true}
m[#m+1] = {address = newLocation + 0x18, flags = 32, value = VL4, freeze = true}
m[#m+1] = {address = newLocation + 0x20, flags = 32, value = VL5, freeze = true}
gg.addListItems(m)  gg.clearFull()

			Hexpath = {}
			Hexpath[1] = {address=(lib + Offset),flags=4,value=(Value),freeze=true};
			gg.addListItems(Hexpath);
			gg.clearFull();
			return Hexpath;
		end;           
end
end
ISAOffsets()
--=====END HOOK=====



v = gg.getTargetInfo();
if v.x64 then
	xbit = "arm64-v8a";
	Value_Map = 'h F8 5F BC A9 F6 57 01 A9 F4 4F 02 A9 FD 7B 03 A9 FD C3 00 91 B7 4C 02 D0 E8 1A 6C 39 F5 03 03 2A F6 03 02 2A F3 03 01 2A'
	Value_Ami = 'h F5 0F 1D F8 F4 4F 01 A9 FD 7B 02 A9 FD 83 00 91 F5 03 01 AA F4 03 00 AA 40 19 84 52 E1 03 1F AA F3 03 02 2A'
    Value_Camxa = '-2999674701204077569;-6268592876918255628;3026704769214333949;5944913276629418996::29'
else
	xbit = "armeabi-v7a";
	Value_Map = 'h F0 4F 2D E9 1C B0 8D E2 0C D0 4D E2 A0 42 9F E5 00 A0 A0 E1 03 80 A0 E1 02 60 A0 E1 04 40 8F E0 01 90 A0 E1 00 00 D4 E5'
	Value_Ami = 'h F0 48 2D E9 10 B0 8D E2 18 D0 4D E2 01 60 A0 E1 00 50 A0 E1 CA 00 02 E3 00 10 A0 E3 02 40 A0 E1 00 70 A0 E3'
    Value_Camxa = '-1676029619431699710;-2121846297103349712;-2044616634831731559::85'
end

v = gg.getTargetInfo();
if v.x64 then
	xbit = "x64";
else
	xbit = "x32";
end
GZ = gg.getTargetInfo().RSS
GX = gg.getTargetInfo().pid
GN = gg.getTargetInfo().label;
GV = gg.getTargetInfo().versionName;
GC = gg.getTargetPackage()
vlxx = "Script By YouTube : LETHI9GG \n[=====[Game Information]=====]\n\n["..GX.."] " .. GN .. " [" .. xbit .."] [" .. GZ/975 .. " MB]\n["..GC.."]\n"..Lib.state..": "..Lib.start.." - "..Lib['end'].."\n"..Lib.type.." " .. Lib.shortName .." ["..Lib.size.."]\n\n";
if gg.isVisible(true) then
	gg.setVisible(false);
end
lt91 = false;
lt92 = false;
on = "[░░██]";
off = "[██░░]";
ww = off;
tt = off;





gg.toast("Load."); gg.sleep(700);
gg.toast("Load.."); gg.sleep(800);
gg.toast("Load..."); gg.sleep(900);
gg.processToggle()

--bool SetVisible(COM_PLAYERCAMP camp, bool bVisible, bool forceSync = False) { }
gg.setRanges(-1)
gg.clearFull()
gg.searchNumber(Value_Map, 1, false, gg.SIGN_EQUAL,libstar, libend, 1)
gg.checkResults('Lỗi Value Map')
local t = gg.getResults(gg.getResultsCount())
local offset_Map = t[1].address - libstar
gg.clearFull()

--public bool IsDistanceLowerEqualAsAttacker(ActorLinker targetActor, int radius) { }
gg.setRanges(-1)
gg.clearFull()
gg.searchNumber(Value_Ami, 1, false, gg.SIGN_EQUAL,libstar, libend, 1)
gg.checkResults('Lỗi Value Ami')
local t = gg.getResults(gg.getResultsCount())
local offset_Ami = t[1].address - libstar
gg.clearFull()

--private float GetCameraHeightRateValue(int type) { }
gg.setRanges(-1)
gg.clearFull()
gg.searchNumber(Value_Camxa, 32, false, gg.SIGN_EQUAL,libstar, libend, 1)
gg.checkResults('Lỗi Value Camxa')
local t = gg.getResults(gg.getResultsCount())
local offset_Camxa = t[2].address - libstar
gg.clearFull()


gg.getHookMethods('Hack Map',offset_Map)
gg.getHookPatchMemory('Hack Ami',offset_Ami)
gg.getHookPatchMemory('Hack Camxa',offset_Camxa)

--gg.getHookMethods('Tên Chức Năng',Offset)
--gg.editHookMethods('Tên Chức Năng',Parameter,Value,Flags)
--gg.revertHookMethods('Tên Chức Năng',Parameter)


--gg.getHookPatchMemory('Tên Chức Năng',Offset)
--gg.editHookPatchMemory('Tên Chức Năng',Value,Flags)
--gg.revertHookPatchMemory('Tên Chức Năng')

gg.processToggle()
gg.toast("Khởi Động Thành Công!");
x1 = "1";
function START()
	sh = gg.prompt({
    (vlxx .. "Camera:                                               [1; 5]"),
    (ww .. "Map sáng"),
    (tt .. "Ami skill"),
     "Thoát"}, 
      {[1]=x1}, 
      {"number",
       "checkbox",
       "checkbox",
       "checkbox"
    });
	if (sh == nil) then
		noselect();
		return;
	end
	if sh[4] then
		wiping();
		return;
	end
	x1 = tonumber(sh[1]);
	if (tonumber(sh[1]) ~= 1) then
		gg.editHookPatchMemory('Hack Camxa',sh[1],float)
		gg.toast("Load."); gg.sleep(700);
		gg.toast("Load.."); gg.sleep(800);
		gg.toast("Load..."); gg.sleep(900);
		gg.toast("Camera = "..sh[1]);
        gg.sleep(1000);
	end
	if sh[2] then
		if (ww == on) then
			ww = off;
			gg.revertHookMethods('Hack Map',2)
		    gg.toast("OFF(Map sáng)");
			gg.sleep(1000);
		else
			ww = on;
			if lt91 then
				gg.editHookMethods('Hack Map',2,1,int)
				gg.toast("ON(Map sáng)");
				gg.sleep(1000);
			else
				lt91 = true;
				gg.editHookMethods('Hack Map',2,1,int)
				gg.toast("ON(Map sáng)");
				gg.sleep(1000);
			end
		end
	end
	if sh[3] then
		if (tt == on) then
			tt = off;
			gg.revertHookPatchMemory('Hack Ami')
			gg.toast("OFF(Ami skill)");
			gg.sleep(1000);
		else
			tt = on;
			if lt92 then
				gg.editHookPatchMemory('Hack Ami',1,int)
				gg.toast("ON(Ami skill)");
				gg.sleep(1000);
			else
				lt92 = true;
				gg.editHookPatchMemory('Hack Ami',1,int)
				gg.toast("ON(Ami skill)");
				gg.sleep(1000);
			end
		end
	end
	if (tonumber(sh[1]) == 1) then
	    gg.revertHookPatchMemory('Hack Camxa')
	    gg.toast("Load."); gg.sleep(700);
		gg.toast("Load.."); gg.sleep(800);
		gg.toast("Load..."); gg.sleep(900);
		gg.toast("OFF(Camera)");
		gg.sleep(1000);
		return;
	end
end
function wiping()
	gg.clearList();
	gg.toast("YouTube: LETHI9GG");
	gg.sleep(550);
	os.exit();
end
function noselect()
	gg.toast("YouTube: LETHI9GG");
	gg.sleep(550);
end
while true do
	if gg.isVisible() then
		gg.setVisible(false);
		START();
	end
	gg.sleep(100);
end
